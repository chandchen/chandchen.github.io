<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chand Chen</title>
  
  <subtitle>To Be An Artist</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/chandchen/"/>
  <updated>2019-04-24T15:47:20.470Z</updated>
  <id>https://github.com/chandchen/</id>
  
  <author>
    <name>Chand Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Developing a Django app with zc.buildout</title>
    <link href="https://github.com/chandchen/2019/04/buildout/"/>
    <id>https://github.com/chandchen/2019/04/buildout/</id>
    <published>2019-04-24T13:46:46.000Z</published>
    <updated>2019-04-24T15:47:20.470Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Buildout是一个基于Python的构建工具, 通过一个配置文件，可以从多个部分创建、组装并部署应用，即使应用包含了非Python的组件，Buildout也能够胜任. Buildout不但能够像setuptools一样自动更新或下载安装依赖包，而且还能够像virtualenv一样，构建一个封闭隔离的开发环境. </p></blockquote><p>So, here’s how to build, test, and distribute a reusable Django app using Buildout, with every step along the way explained in excruciating detail.<br>下面是关于如何使用Buildout构建、测试和配置一个可以复用的Django应用，并详细解释每一步的具体细节。</p><p><strong>Create the Buildout environment</strong><br>First, create the minimal structure for your app. Make a structure like:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">django-shorturls/</span><br><span class="line">    LICENSE</span><br><span class="line">    README.md</span><br><span class="line">    bootstrap.py</span><br><span class="line">    buildout.cfg</span><br><span class="line">    setup.py</span><br><span class="line">    src/</span><br><span class="line">        shorturls/</span><br><span class="line">            __init__.py</span><br></pre></td></tr></table></figure><p><strong>LICENSE</strong></p><ul><li>If you’re releasing open source software, you need to have a license. Remember that in the absence of a license the default is “All rights reserved.” That is, if there’s no LICENSE, it’s not open source.</li></ul><p><strong>README.md</strong></p><ul><li>Documentation with your contact info and basic usage instructions, always write one before you are done.</li></ul><p><strong>bootstrap.py</strong></p><ul><li><p>This is Buildout’s bootstrap script. This is a little script that you can include with your package to bootstrap the Buildout environment. You should do so: it saves you from having to install Buildout system-wide, since system-wide packages are the road to hell. This also makes it very easy for others to contribute to your app: they don’t have to know how to use Buildout since they can just run the bootstrap.</p></li><li><p>Getting this file is easy: <code>wget https://downloads.buildout.org/1/bootstrap.py</code></p></li></ul><p><strong>buildout.cfg</strong></p><ul><li>Buildout’s config file.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[buildout]</span><br><span class="line">parts =</span><br></pre></td></tr></table></figure><p><strong>setup.py</strong></p><ul><li>Eventually this’ll contain the magic distutils incantations so that you can install this app and push it to the Cheeseshop. We’ll get to this in a second.</li></ul><p><strong>src/</strong></p><ul><li>The convention in the Buildout world appears to be putting the source to modules in a src directory, so might as well follow convention.</li></ul><p>Just to prove that the above really is easy, here’s what it looks like in reality:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p django-shorturls/src/shorturls</span><br><span class="line">$ cd django-shorturls</span><br><span class="line">$ cp ~/Shrapnel/BSD_LICENSE LICENSE</span><br><span class="line">$ touch README.md</span><br><span class="line">$ wget http://svn.zope.org/*checkout*/zc.buildout/trunk/bootstrap/bootstrap.py</span><br><span class="line">$ cat - &gt; buildout.cfg</span><br><span class="line">[buildout]</span><br><span class="line">parts =</span><br><span class="line">^D</span><br><span class="line">$ touch setup.py</span><br><span class="line">$ touch src/shorturls/__init__.py</span><br></pre></td></tr></table></figure></p><p>Now that our boilerplate is written, we can have Buildout generate the rest of its boilerplate:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ python bootstrap.py</span><br><span class="line">Creating directory &apos;.../django-shorturls/bin&apos;.</span><br><span class="line">Creating directory &apos;.../django-shorturls/parts&apos;.</span><br><span class="line">Creating directory &apos;.../django-shorturls/eggs&apos;.</span><br><span class="line">Creating directory &apos;.../django-shorturls/develop-eggs&apos;.</span><br><span class="line">Generated script &apos;.../django-shorturls/bin/buildout&apos;.</span><br><span class="line"></span><br><span class="line">$ ./bin/buildout</span><br><span class="line">Getting distribution for &apos;zc.buildout&apos;.</span><br><span class="line">Got zc.buildout 1.2.1.</span><br><span class="line">Upgraded:</span><br><span class="line">  zc.buildout version 1.2.1;</span><br><span class="line">restarting.</span><br><span class="line">Generated script &apos;.../django-shorturls/bin/buildout&apos;.</span><br></pre></td></tr></table></figure></p><p>Now we’ve got the latest version of Buildout, and a nice isolated environment to fool around in. Anything we do inside this django-shorturls directory will be nicely isolated, so we can develop in a little sandbox, protected from anything that might differ in the outside world.</p><p><em>Note</em></p><p>What’s kinda cool is that these two steps — <code>python bootstrap.py</code> &amp;&amp; <code>./bin/buildout</code> — are all that anyone who contributes to your project needs to do to replicate your development setup. They’ll get your app, your test suite, and all the requisite bootstrapping. So this work we’re doing up front now can be seen as a one-time expense against all the time all your future contributors would otherwise have to spend getting up and running.</p><p>Let’s take a look at what’s here now, with the stuff bootstrap.py and buildout created in bold:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">django-shorturls/</span><br><span class="line">    bin/</span><br><span class="line">        buildout</span><br><span class="line">    bootstrap.py</span><br><span class="line">    buildout.cfg</span><br><span class="line">    develop-eggs/</span><br><span class="line">    eggs/</span><br><span class="line">        setuptools-0.6c9-py2.5.egg/</span><br><span class="line">        zc.buildout-1.1.1-py2.5.egg/</span><br><span class="line">        zc.buildout-1.2.1-py2.5.egg/</span><br><span class="line">    parts/</span><br><span class="line">    src/</span><br><span class="line">        shorturls/</span><br></pre></td></tr></table></figure></p><p>What’s all this, then?</p><p><strong>/bin/buildout</strong></p><ul><li><p>Every time you change your buildout.cfg, you’ll re-run <code>bin/buildout</code> to update the environment to reflect the changes in your config.</p></li><li><p>Buildout actually keeps track (in a file called .installed.cfg)of what was in your config file the last time you ran buildout and what was installed, so only new or changed stuff gets installed each time.</p></li></ul><p><strong>develop-eggs/</strong></p><ul><li>A placeholder for eggs you’re currently developing; we’ll see this used later on.</li></ul><p><strong>eggs/</strong></p><ul><li>Any eggs that Buildout installs end up here. You can see that in my case I ended up with setuptools (which Buildout builds on top of) as well as two versions of zc.buildout — bootstrap.py installed one, and then buildout automatically detected the availability of a newer version and upgraded it for me.</li></ul><p><strong>parts</strong><br>Certain other bits of Buildout cache, download, or otherwise store things here in parts. Think of this as a staging area and cruft zone.</p><p>Make a setup.py<br>So what we’ll be doing next is starting to develop our shorturls app as a Python package, a.k.a. an “egg.” Buildout requires that the package we’re developing be properly egg-ified, so we need to make a setup.py. A minimal one is fine for now:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from setuptools import setup, find_packages</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name = &quot;django-shorturls&quot;,</span><br><span class="line">    version = &quot;1.0&quot;,</span><br><span class="line">    url = &apos;http://github.com/jacobian/django-shorturls&apos;,</span><br><span class="line">    license = &apos;BSD&apos;,</span><br><span class="line">    description = &quot;A short URL handler for Django apps.&quot;,</span><br><span class="line">    author = &apos;Jacob Kaplan-Moss&apos;,</span><br><span class="line">    packages = find_packages(&apos;src&apos;),</span><br><span class="line">    package_dir = &#123;&apos;&apos;: &apos;src&apos;&#125;,</span><br><span class="line">    install_requires = [&apos;setuptools&apos;],</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><em>Set up Buildout, and a sandbox</em></p><ul><li>Next we need to inform Buildout about the egg we’re developing. While we’re at it, we’ll also generate a python that’s local to this development sandbox (this way we can interact with the code as we develop it without needing to install anything).</li></ul><p>Modify your <code>buildout.cfg</code> to read:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[buildout]</span><br><span class="line">parts = python</span><br><span class="line">develop = .</span><br><span class="line">eggs = django-shorturls</span><br><span class="line"></span><br><span class="line">[python]</span><br><span class="line">recipe = zc.recipe.egg</span><br><span class="line">interpreter = python</span><br><span class="line">eggs = $&#123;buildout:eggs&#125;</span><br></pre></td></tr></table></figure></p><p>The important bits to know are:</p><ul><li><code>buildout.cfg</code> INI-style config file, with the added ability to interpolate variables using ${varname} syntax. Refer to keys defined in other sections as ${section:variable}.</li><li><code>[buildout]</code> Waterfall style, proceeds through every other section defined in the buildout:parts key.</li><li><code>develop = .</code> Developing a package whose setup.py lives in ., the current directory.</li><li><code>eggs = django-shorturls</code> The egg we’re developing to be available to any scripts that run inside this environment, and to get the egg we’re developing installed.</li><li><code>[python]</code>, Generate a Python interpreter local to this Buildout.</li><li><code>Parts</code> Associated with a “recipe”. Recipes are just other eggs, available from PyPI or elsewhere, that define how to process a part of a Buildout.</li><li><code>recipe = zc.recipe.egg</code> Standard way of installing eggs, creating wrapper scripts and interpreters, and others.</li><li><code>interpreter = python</code> Tells zc.recipe.egg to generate a Python interpreter named python and install it locally to the Buildout.</li><li><code>eggs = ${buildout:eggs}</code> Make development egg available, to copy the list of eggs from the buildout part.</li></ul><p>Now that we’ve changed our buildout.cfg, we re-run bin/buildout to pick up those changes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/buildout</span><br><span class="line">Develop: &apos;.../django-shorturls/.&apos;</span><br><span class="line">Getting distribution for &apos;zc.recipe.egg&apos;.</span><br><span class="line">Got zc.recipe.egg 1.2.2.</span><br><span class="line">Installing python.</span><br><span class="line">Generated interpreter &apos;.../django-shorturls/bin/python&apos;.</span><br></pre></td></tr></table></figure></p><p>What happened here was:</p><p>Buildout noted that we’re using a develop egg, ran the local setup.py file, and created a file develop-eggs/django-shorturls.egg-link, a little link file making src/shorturls available to the rest of Buildout.<br>We asked for the zc.recipe.egg recipe but didn’t have it already installed, so Buildout fetched and installed it from the Cheeseshop.<br>Finally, Buildout generated a bin/python interpreter.<br>Let’s take a look at what this bin/python interpreter is. We haven’t installed our app anywhere, so using the system Python we can’t see the package:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/python</span><br><span class="line">&gt;&gt;&gt; import shorturls</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span><br><span class="line">ImportError: No module named shorturls</span><br></pre></td></tr></table></figure></p><p>However, we can get to our package from this little wrapper:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/python</span><br><span class="line">&gt;&gt;&gt; import shorturls</span><br><span class="line">&gt;&gt;&gt; shorturls</span><br><span class="line">&lt;module &apos;shorturls&apos; from &apos;.../django-shorturls/src/shorturls/__init__.py&apos;&gt;</span><br></pre></td></tr></table></figure></p><p>This shows off one of the key concepts of Buildout: what happens in Buildout, stays in Buildout. That is, everything that you do inside this isolated environment is only available inside the environment, and doesn’t clutter up your system.</p><p>Note</p><p>By the way, now’s a good time to create an “ignore” file for your revision control system — you are using revision control, right? Since a bunch of this stuff gets generated, we don’t want to check it into revision control.</p><p>Here’s what I use for my .gitignore:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*.pyc</span><br><span class="line">*.pyo</span><br><span class="line">.installed.cfg</span><br><span class="line">bin</span><br><span class="line">develop-eggs</span><br><span class="line">dist</span><br><span class="line">downloads</span><br><span class="line">eggs</span><br><span class="line">parts</span><br><span class="line">src/*.egg-info</span><br></pre></td></tr></table></figure></p><p><strong>Create a test wrapper</strong><br>Code without tests is broken as designed. Therefore, the next step is to set up an easy way to run tests.<br>没有测试的代码就像破碎的设计图，下面将会用一个最简单的方法让测试代码跑起来。</p><p>We’ll do this with djangorecipe, a Buildout recipe that automates much of the process of using Django with Buildout. It actually does a lot more than we’ll touch on here, but that’s another show.</p><p><em>Note</em></p><p>You might feel like the next bit is somewhat clunky, and it is. The basic problem is that Django’s test suite needs at least a minimal settings.py to be able to run unit tests, and there’s not really a slick way of doing that automatically (yet). I’ve played with a few ways of doing this, and what follows is the least-clunky way I could figure out.</p><p>Open up src/shorturls/testsettings.py and make a minimal settings file:</p><p>DATABASE_ENGINE = ‘sqlite3’<br>DATABASE_NAME = ‘/tmp/shorturls.db’<br>INSTALLED_APPS = [‘shorturls’]<br>ROOT_URLCONF = [‘shorturls.urls’]<br>These four settings are the absolute minimum set required just to get the test suite bootstrapped and running. Note that the DATABASE_NAME given there won’t actually be used — tests under SQLite are run in-memory — but you do need one anyway.</p><p>Also, a limitation of the test suite is that it’ll only test apps with a models.py (even an empty one), so:</p><p>$ touch src/shorturls/models.py<br>Next, inform Buildout and djangorecipe of that file and ask it to build a test runner by appending the following to buildout.cfg:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[django]</span><br><span class="line">recipe = djangorecipe</span><br><span class="line">version = 1.0.2</span><br><span class="line">project = shorturls</span><br><span class="line">projectegg = shorturls</span><br><span class="line">settings = testsettings</span><br><span class="line">test = shorturls</span><br><span class="line">eggs = $&#123;buildout:eggs&#125;</span><br></pre></td></tr></table></figure></p><p>Add django to the list of parts in the buildout:parts setting (<code>parts = python django</code>).</p><p><code>recipe = djangorecipe</code></p><ul><li>We want to use djangorecipe for this part.</li></ul><p><code>version = 1.0.2</code></p><ul><li>Develop against Django 1.0.2.</li></ul><p><code>project = shorturls</code></p><ul><li>The name of the Django “project” that the Django installation will use.</li><li>The main purpose of djangorecipe is to pull together all the dependancies for a deployed Django app, and in that situation you need a project to contain the settings, root URLconf, and such. The recipe will actually generate this project module for you.</li></ul><p><code>projectegg = shorturls</code></p><ul><li>This tells djangorecipe that our project module already exists in the package shorturls, so don’t generate a project module.</li></ul><p><code>settings = testsettings</code></p><ul><li>The name (relative to project) of the module containing settings. So between this and project, the <code>DJANGO_SETTINGS_MODULE</code> used by the test runner will be <code>shorturls.testsettings</code>.</li></ul><p><code>test = shorturls</code></p><ul><li>This tells the recipe to generate a test runner for the apps listed. We just have one, shorturls.</li></ul><p><code>eggs = ${buildout:eggs}</code></p><ul><li>Just as for the python part, we want to make the eggs that Buildout knows about available to the generated scripts.</li></ul><p>Since we’ve made changes to the buildout.cfg, we re-run buildout to pick up those changes:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/buildout</span><br><span class="line">Develop: &apos;.../django-shorturls/.&apos;</span><br><span class="line">Installing &apos;djangorecipe&apos;.</span><br><span class="line">Getting distribution for &apos;djangorecipe&apos;.</span><br><span class="line">Got djangorecipe 0.17.1.</span><br><span class="line">Installing django.</span><br><span class="line">Downloading Django from: http://www.djangoproject.com/download/1.0.2/tarball/</span><br><span class="line">Generated script &apos;.../django-shorturls/bin/django&apos;.</span><br><span class="line">Generated script &apos;.../django-shorturls/bin/test&apos;.</span><br></pre></td></tr></table></figure></p><p>We’ve got two new scripts here.</p><p><code>bin/django</code> is a manage.py wrapper that bootstraps Django into the Buildout environment. Try, for example, <code>./bin/django shell</code> to get into a shell already bootstraped both for Buildout and for Django.</p><p><code>bin/test</code> is the one we’re really interested in, though: this is the one that runs the test for the app we’re developing. To make sure everything works, let’s create a simple passing test to double-check that it gets picked up and run correctly. Put something like the following into <code>src/shorturls/tests.py</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">from django.test import TestCase</span><br><span class="line"></span><br><span class="line">class ShortURLTests(TestCase):</span><br><span class="line">    def test_environment(self):</span><br><span class="line">        &quot;&quot;&quot;Just make sure everything is set up correctly.&quot;&quot;&quot;</span><br><span class="line">        self.assert_(True)</span><br></pre></td></tr></table></figure></p><p>And then run the tests:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ ./bin/tests</span><br><span class="line">Creating test database...</span><br><span class="line">.</span><br><span class="line">------------------------------</span><br><span class="line">Ran 1 test in 0.003s</span><br><span class="line"></span><br><span class="line">OK</span><br><span class="line">Destroying test database...</span><br></pre></td></tr></table></figure></p><p>Now that we’ve got code, it’s time to share it with the world.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Buildout是一个基于Python的构建工具, 通过一个配置文件，可以从多个部分创建、组装并部署应用，即使应用包含了非Python的组件，Buildout也能够胜任. Buildout不但能够像setuptools一样自动更新或下载安装依赖包，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IOS &amp; Android Download app using one qrcode solution</title>
    <link href="https://github.com/chandchen/2019/03/qrcode/"/>
    <id>https://github.com/chandchen/2019/03/qrcode/</id>
    <published>2019-03-02T15:55:33.000Z</published>
    <updated>2019-04-05T10:15:49.280Z</updated>
    
    <content type="html"><![CDATA[<p>The embedded URL could link to a webpage that checks user agents and redirects appropriately. If the Safari on iOS user agent is detected, redirect to Apple’s App Store. An Android user agent would be redirected to an appropriate app store.</p><h5 id="Quick-Solution"><a href="#Quick-Solution" class="headerlink" title="Quick Solution"></a>Quick Solution</h5><ol><li>Create a separate web link with embedded js code that checks browser user-agent informations and doing a redirection</li><li>Using the web link to generate the corresponding QR code</li><li>When user scans the QR code using the mobile phone, it can automatically identify the device and then automatically redirect to the corresponding page of the device.</li></ol><p><img src="https://i.imgur.com/pw68gTW.png" alt="QR-Code Demo"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>App Download Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">            var browser = &#123;</span></span><br><span class="line"><span class="undefined">                versions: function() &#123;</span></span><br><span class="line"><span class="undefined">                    var u = navigator.userAgent, app = navigator.appVersion;</span></span><br><span class="line"><span class="undefined">                    return &#123;</span></span><br><span class="line"><span class="undefined">                        trident: u.indexOf('Trident') &gt; -1, //IE core</span></span><br><span class="line"><span class="undefined">                        presto: u.indexOf('Presto') &gt; -1, //Opera core</span></span><br><span class="line"><span class="undefined">                        webKit: u.indexOf('AppleWebKit') &gt; -1, //Apple、Google core</span></span><br><span class="line"><span class="undefined">                        gecko: u.indexOf('Gecko') &gt; -1 &amp;&amp; u.indexOf('KHTML') == -1, //FireFox core</span></span><br><span class="line"><span class="undefined">                        mobile: !!u.match(/AppleWebKit.*Mobile.*/) || !!u.match(/AppleWebKit/), //Mobile device</span></span><br><span class="line"><span class="undefined">                        ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/), //ios device</span></span><br><span class="line"><span class="undefined">                        android: u.indexOf('Android') &gt; -1 || u.indexOf('Linux') &gt; -1, //android device or uc browser</span></span><br><span class="line"><span class="undefined">                        iPhone: u.indexOf('iPhone') &gt; -1 || u.indexOf('Mac') &gt; -1, //iPhone or QQHD browser</span></span><br><span class="line"><span class="undefined">                        iPad: u.indexOf('iPad') &gt; -1, //iPad</span></span><br><span class="line"><span class="undefined">                        webApp: u.indexOf('Safari') == -1 //webapp</span></span><br><span class="line"><span class="undefined">                    &#125;;</span></span><br><span class="line"><span class="undefined">                &#125;(),</span></span><br><span class="line"><span class="undefined">                language: (navigator.browserLanguage || navigator.language).toLowerCase()</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            if (browser.versions.ios || browser.versions.iPhone || browser.versions.iPad) &#123;</span></span><br><span class="line"><span class="undefined">                window.location = "https://itunes.apple.com/cn/app/xxx";</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">            else if (browser.versions.android) &#123;</span></span><br><span class="line"><span class="undefined">                window.location = "https://sj.qq.com/myapp/detail.htm?apkName=xxx";</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        Redirect to the download page...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;The embedded URL could link to a webpage that checks user agents and redirects appropriately. If the Safari on iOS user agent is detected
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Building a Calendar with Pure JavaScript</title>
    <link href="https://github.com/chandchen/2018/12/calendar/"/>
    <id>https://github.com/chandchen/2018/12/calendar/</id>
    <published>2018-12-11T10:25:57.000Z</published>
    <updated>2019-04-05T12:44:43.276Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Building-a-Calendar-with-Pure-JavaScript"><a href="#Building-a-Calendar-with-Pure-JavaScript" class="headerlink" title="Building a Calendar with Pure JavaScript"></a>Building a Calendar with Pure JavaScript</h3><ul><li><p>Demo: <a href="http://chandchen.com/projects/calendar/" target="_blank" rel="noopener">http://chandchen.com/projects/calendar/</a></p></li><li><p>Code: <a href="https://github.com/chandchen/HTML-CSS-JavaScript">https://github.com/chandchen/HTML-CSS-JavaScript</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Building-a-Calendar-with-Pure-JavaScript&quot;&gt;&lt;a href=&quot;#Building-a-Calendar-with-Pure-JavaScript&quot; class=&quot;headerlink&quot; title=&quot;Building a C
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Placeholder</title>
    <link href="https://github.com/chandchen/2018/12/something/"/>
    <id>https://github.com/chandchen/2018/12/something/</id>
    <published>2018-12-09T13:11:35.000Z</published>
    <updated>2018-12-23T16:15:28.299Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Placeholder</title>
    <link href="https://github.com/chandchen/2018/12/placeholder/"/>
    <id>https://github.com/chandchen/2018/12/placeholder/</id>
    <published>2018-12-09T12:28:25.000Z</published>
    <updated>2018-12-23T04:28:39.323Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Photos</title>
    <link href="https://github.com/chandchen/2018/12/photo/"/>
    <id>https://github.com/chandchen/2018/12/photo/</id>
    <published>2018-12-09T12:07:47.000Z</published>
    <updated>2018-12-23T16:16:45.437Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/7853084cgw1f7vueqesr5j21jk0uh446.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/7853084cgw1f7vueqesr5j21jk0uh446.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/7853084cgw1f7vueqesr5j21jk0uh446.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/7853084cgw1f7vueqesr5j21jk0uh446.jpg" alt=""> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/7853084cgw1f7vueqesr5j21jk0uh446.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/7853084cgw1f
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Placeholder</title>
    <link href="https://github.com/chandchen/2018/12/someone/"/>
    <id>https://github.com/chandchen/2018/12/someone/</id>
    <published>2018-12-09T11:58:22.000Z</published>
    <updated>2018-12-23T16:15:46.630Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to Use Python Virtualenv and VirtualenvWrapper</title>
    <link href="https://github.com/chandchen/2018/12/virtualenv/"/>
    <id>https://github.com/chandchen/2018/12/virtualenv/</id>
    <published>2018-12-09T11:57:18.000Z</published>
    <updated>2019-04-24T15:55:50.186Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Learning Django from Beginning</title>
    <link href="https://github.com/chandchen/2018/12/django/"/>
    <id>https://github.com/chandchen/2018/12/django/</id>
    <published>2018-12-09T11:56:41.000Z</published>
    <updated>2019-04-24T15:57:36.568Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Check-your-django-version"><a href="#Check-your-django-version" class="headerlink" title="Check your django version"></a>Check your django version</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python -m django --version</span><br></pre></td></tr></table></figure><h4 id="Create-a-projet"><a href="#Create-a-projet" class="headerlink" title="Create a projet"></a>Create a projet</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ django-admin startproject mysite</span><br></pre></td></tr></table></figure><h4 id="Project-structure"><a href="#Project-structure" class="headerlink" title="Project structure"></a>Project structure</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py</span><br><span class="line">        settings.py</span><br><span class="line">        urls.py</span><br><span class="line">        wsgi.py</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py runserver 0:8080</span><br><span class="line"># 0 is a shortcut for 0.0.0.0</span><br></pre></td></tr></table></figure><h4 id="Create-the-apps"><a href="#Create-the-apps" class="headerlink" title="Create the apps"></a>Create the apps</h4><blockquote><p>Projects vs. apps: a project is a collection of configuration and apps for a particular wesite. A project can contain multiple apps, An app can be in multiple projects.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py startapp polls</span><br></pre></td></tr></table></figure><h6 id="App-Structures"><a href="#App-Structures" class="headerlink" title="App Structures"></a>App Structures</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Check-your-django-version&quot;&gt;&lt;a href=&quot;#Check-your-django-version&quot; class=&quot;headerlink&quot; title=&quot;Check your django version&quot;&gt;&lt;/a&gt;Check your 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>How to use Hexo and deploy to GitHub Pages</title>
    <link href="https://github.com/chandchen/2018/11/hexo/"/>
    <id>https://github.com/chandchen/2018/11/hexo/</id>
    <published>2018-11-04T07:40:09.000Z</published>
    <updated>2018-12-09T11:45:01.021Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>How to use Hexo and deploy to GitHub Pages</p></blockquote><h2 id="How-to-use-Hexo-and-deploy-to-GitHub-Pages"><a href="#How-to-use-Hexo-and-deploy-to-GitHub-Pages" class="headerlink" title="How to use Hexo and deploy to GitHub Pages"></a>How to use Hexo and deploy to GitHub Pages</h2><ul><li><a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></li><li><a href="https://hexo.io/docs/" target="_blank" rel="noopener">https://hexo.io/docs/</a></li></ul><h3 id="1-Install-Hexo"><a href="#1-Install-Hexo" class="headerlink" title="1. Install Hexo"></a>1. Install Hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">$ hexo -v</span><br><span class="line">hexo-cli: 0.1.9</span><br><span class="line">os: Darwin 14.3.0 darwin x64</span><br><span class="line">http_parser: 2.3</span><br><span class="line">node: 0.12.7</span><br><span class="line">v8: 3.28.71.19</span><br><span class="line">uv: 1.6.1</span><br><span class="line">zlib: 1.2.8</span><br><span class="line">modules: 14</span><br><span class="line">openssl: 1.0.1p</span><br></pre></td></tr></table></figure><h3 id="2-Create-a-project-for-your-GitHub-Pages"><a href="#2-Create-a-project-for-your-GitHub-Pages" class="headerlink" title="2. Create a project for your GitHub Pages"></a>2. Create a project for your GitHub Pages</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init yt8yt.github.io</span><br><span class="line">INFO  Copying data to ~/***/yt8yt.github.io</span><br><span class="line">INFO  You are almost done! Don&apos;t forget to run &apos;npm install&apos; before you start blogging with Hexo!</span><br><span class="line"></span><br><span class="line">$ cd yt8yt.github.io</span><br><span class="line"></span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><h3 id="3-Run-a-test-server-for-your-page-on-Mac"><a href="#3-Run-a-test-server-for-your-page-on-Mac" class="headerlink" title="3. Run a test server for your page on Mac"></a>3. Run a test server for your page on Mac</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><h3 id="4-Set-information-for-your-new-blog"><a href="#4-Set-information-for-your-new-blog" class="headerlink" title="4. Set information for your new blog"></a>4. Set information for your new blog</h3><p><a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">https://hexo.io/docs/configuration.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~</span><br><span class="line"># Site</span><br><span class="line">title: yt8yt&apos;s note</span><br><span class="line">subtitle:</span><br><span class="line">description: yt8yt&apos;s personal blog</span><br><span class="line">author: yt8yt</span><br><span class="line">language:</span><br><span class="line">timezone: Japan</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://yt8yt.github.io/</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure></p><h3 id="5-Set-information-to-use-Git"><a href="#5-Set-information-to-use-Git" class="headerlink" title="5. Set information to use Git"></a>5. Set information to use Git</h3><p><a href="https://github.com/hexojs/hexo-deployer-git">https://github.com/hexojs/hexo-deployer-git</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~</span><br><span class="line"># Deployment</span><br><span class="line">## Docs: http://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yt8yt/yt8yt.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><h3 id="6-Set-“watch”-before-starting-your-work"><a href="#6-Set-“watch”-before-starting-your-work" class="headerlink" title="6. Set “watch” before starting your work"></a>6. Set “watch” before starting your work</h3><p>“watch” command can monitor your files.<br><a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">https://hexo.io/docs/generating.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></table></figure></p><h3 id="7-Create-a-new-post-file"><a href="#7-Create-a-new-post-file" class="headerlink" title="7. Create a new post file"></a>7. Create a new post file</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new first-post</span><br><span class="line">INFO  Created: ~/***/yt8yt.github.io/source/_posts/first-post.md</span><br></pre></td></tr></table></figure><h3 id="8-Edit-the-above-file-with-Markdown-or-Hexo’s-Helper"><a href="#8-Edit-the-above-file-with-Markdown-or-Hexo’s-Helper" class="headerlink" title="8. Edit the above file with Markdown or Hexo’s Helper"></a>8. Edit the above file with Markdown or Hexo’s Helper</h3><p>Hexo’s Helper<br><a href="https://hexo.io/docs/helpers.html" target="_blank" rel="noopener">https://hexo.io/docs/helpers.html</a><br>I use Atom with “shift + control + m” when I use Markdown :-)<br><a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p><h3 id="9-Delete-“source-posts-hello-world-md”"><a href="#9-Delete-“source-posts-hello-world-md”" class="headerlink" title="9. Delete “source/_posts/hello-world.md”"></a>9. Delete “source/_posts/hello-world.md”</h3><p>It’s not necessary to deploy.</p><h3 id="10-Deploy-your-new-blog"><a href="#10-Deploy-your-new-blog" class="headerlink" title="10. Deploy your new blog!!"></a>10. Deploy your new blog!!</h3><p><a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/docs/deployment.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></p><p>After writting the above command, you can see your new blog on GitHub Pages.<br>http://<strong>**</strong>.github.io/</p><h3 id="11-Change-your-blog-theme"><a href="#11-Change-your-blog-theme" class="headerlink" title="11. Change your blog theme"></a>11. Change your blog theme</h3><p><a href="https://github.com/hexojs/hexo/wiki/Themes">https://github.com/hexojs/hexo/wiki/Themes</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">For instance, How to use the following theme.</span><br><span class="line">https://hexo.io/hexo-theme-light/</span><br><span class="line"></span><br><span class="line">## Install it</span><br><span class="line">$ cd yt8yt.github.io</span><br><span class="line">$ git clone git://github.com/tommy351/hexo-theme-light.git themes/light</span><br><span class="line"></span><br><span class="line">## Update the above files</span><br><span class="line">$ themes/light</span><br><span class="line">$ git pull</span><br><span class="line"></span><br><span class="line">## Set information to use the theme</span><br><span class="line">$ cd yt8yt.github.io</span><br><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~ _config.yml ~~~~~~~~~~~~~~~~~~</span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: http://hexo.io/plugins/</span><br><span class="line">## Themes: http://hexo.io/themes/</span><br><span class="line">theme: light</span><br></pre></td></tr></table></figure></p><h3 id="12-Create-a-new-page-file"><a href="#12-Create-a-new-page-file" class="headerlink" title="12. Create a new page file"></a>12. Create a new page file</h3><p><a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">https://hexo.io/docs/writing.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page aboutme</span><br><span class="line">INFO  Created: ~/***/yt8yt.github.io/source/aboutme/index.md</span><br><span class="line"></span><br><span class="line">$ cd source/aboutme/</span><br><span class="line"></span><br><span class="line">$ vi index.md</span><br></pre></td></tr></table></figure></p><h3 id="13-Use-“Read-More”"><a href="#13-Use-“Read-More”" class="headerlink" title="13. Use “Read More”"></a>13. Use “Read More”</h3><p>Write <code>&lt;!-- more --&gt;</code> in your articles.  </p><h3 id="14-Use-Plugins"><a href="#14-Use-Plugins" class="headerlink" title="14. Use Plugins"></a>14. Use Plugins</h3><p><a href="https://github.com/hexojs/hexo/wiki/Plugins">https://github.com/hexojs/hexo/wiki/Plugins</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;How to use Hexo and deploy to GitHub Pages&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;How-to-use-Hexo-and-deploy-to-GitHub-Pages&quot;&gt;&lt;a href=&quot;#H
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/chandchen/2018/11/hello-world/"/>
    <id>https://github.com/chandchen/2018/11/hello-world/</id>
    <published>2018-11-01T15:45:36.833Z</published>
    <updated>2018-12-09T10:52:58.427Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
